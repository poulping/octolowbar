<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $content_id
 * @property string $username
 * @property string $content
 * @property Content $Content
 * 
 * @method integer getContentId()  Returns the current record's "content_id" value
 * @method string  getUsername()   Returns the current record's "username" value
 * @method string  getContent()    Returns the current record's "content" value
 * @method Content getContent()    Returns the current record's "Content" value
 * @method Comment setContentId()  Sets the current record's "content_id" value
 * @method Comment setUsername()   Sets the current record's "username" value
 * @method Comment setContent()    Sets the current record's "content" value
 * @method Comment setContent()    Sets the current record's "Content" value
 * 
 * @package    octolowbar
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('content_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('detect_relations', false);
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Content', array(
             'local' => 'content_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}